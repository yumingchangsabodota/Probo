
//! Autogenerated weights for `pallet_issuance_proof`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 50.0.0
//! DATE: 2025-09-26, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `TW-ZIV-Y-CHANG`, CPU: `<UNKNOWN>`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: 1024

// Executed Command:
// frame-omni-bencher
// v1
// benchmark
// pallet
// --runtime
// ./target/release/wbuild/solochain-template-runtime/solochain_template_runtime.compact.compressed.wasm
// --pallet
// pallet-issuance-proof
// --extrinsic
// 
// --output
// pallets/issuance-proof/src/weights/issuance-proof.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_issuance_proof`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_issuance_proof::WeightInfo for WeightInfo<T> {
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(67), added: 2542, mode: `MaxEncodedLen`)
	/// Storage: `Proof::WhitelistEntity` (r:0 w:1)
	/// Proof: `Proof::WhitelistEntity` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	fn register_entity() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `103`
		//  Estimated: `3593`
		// Minimum execution time: 38_000_000 picoseconds.
		Weight::from_parts(42_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3593))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `Proof::IssuanceProof` (r:1 w:1)
	/// Proof: `Proof::IssuanceProof` (`max_values`: None, `max_size`: Some(594), added: 3069, mode: `MaxEncodedLen`)
	/// Storage: `Proof::WhitelistEntity` (r:1 w:0)
	/// Proof: `Proof::WhitelistEntity` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	fn store_proof() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `78`
		//  Estimated: `4059`
		// Minimum execution time: 15_000_000 picoseconds.
		Weight::from_parts(16_000_000, 0)
			.saturating_add(Weight::from_parts(0, 4059))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
